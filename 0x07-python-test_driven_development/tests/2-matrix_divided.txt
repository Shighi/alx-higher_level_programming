# Test cases for matrix_divided function

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test normal division
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test that original matrix is unchanged
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

# Test with floats
>>> matrix = [[1.1, 2.2, 3.3], [4.4, 5.5, 6.6]]
>>> print(matrix_divided(matrix, 2))
[[0.55, 1.1, 1.65], [2.2, 2.75, 3.3]]

# Test error cases
>>> try:
...     matrix_divided([[1, 2, 3], [4, "School", 6]], 3)
... except Exception as e:
...     print(e)
matrix must be a matrix (list of lists) of integers/floats

>>> try:
...     matrix_divided([[1, 2, 3], [4, 5]], 3)
... except Exception as e:
...     print(e)
Each row of the matrix must have the same size

>>> try:
...     matrix_divided([[1, 2, 3], [4, 5, 6]], "School")
... except Exception as e:
...     print(e)
div must be a number

>>> try:
...     matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
... except Exception as e:
...     print(e)
division by zero
